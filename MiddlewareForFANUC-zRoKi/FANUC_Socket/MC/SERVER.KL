PROGRAM TCPserver3
----------------------------------------------------
-- CReation date: 2021.10.11
-- CReated by: 
----------------------------------------------------
-- Version: V-0.1
----------------------------------------------------
-- Function: 
----------------------------------------------------
-- Last modified: 2021.10.11
-- Last modified by:                              
----------------------------------------------------
%COMMENT = 'TCP Socket Server'
%ALPHABETIZE
%STACKSIZE = 4000
%NOLOCKGROUP
%ENVIRONMENT UIF
%ENVIRONMENT SYSDEF
%ENVIRONMENT MEMO
%ENVIRONMENT KCLOP
%ENVIRONMENT BYNAM
%ENVIRONMENT FDEV
%ENVIRONMENT FLBT
%NOPAUSE=ERROR+COMMAND+TPENABLE
%INCLUDE KLEVKEYS
%INCLUDE KLEVKMSK
%INCLUDE KLEVCCDF
%INCLUDE KLIOUOP
%INCLUDE KLIOTYPS

----------------------------------------------------
CONST
    SUCCESS = 0 --success constatnt

VAR
        file_var : FILE -- handls File I/O operation  	
		fileIO : INTEGER -- shows status of File operation 
		status : INTEGER -- shiws status for other operations		
		btyeAvailabl : INTEGER -- shows remanining bytes in read buffer
		loop_flage : BOOLEAN
        intVal : INTEGER -- used for GET_TPE_PRM Arguments
        realVal : REAL  -- used for GET_TPE_PRM Arguments
        strVal : STRING[1]  -- used for GET_TPE_PRM Arguments
        dataType : INTEGER  -- used for GET_TPE_PRM Arguments
        prmPosregId : INTEGER --PR id got for TP prog


----------------------------------------------------
-- BEGIN TCPserver-3                             
----------------------------------------------------
BEGIN
		
	--Clear and home user screen.
	WRITE(CHR(128))
	WRITE(CHR(137))
	-- clear the TPERROR screen
	WRITE TPERROR(CHR(128))
    --TCP-Socket Server initialization
    -- Set up S3 server tag
    -- setting file with read ahead attribute rather than Interactive mode
    SET_FILE_ATR(file_var, ATR_READAHD)--ATR_IA
    -- dismount previously opened/used Server file
    DISMOUNT_DEV('S3:',status)
    MOUNT_DEV('S3:',status)
    WRITE ('Mount Status = ',status,CR)
    IF status =  SUCCESS THEN
        -- Connect the tag
        WRITE ('Connecting ...',CR)
        MSG_CONNECT ('S3:',status)
        WRITE ('Connect Status = ',status,CR)
        IF status<>  SUCCESS THEN
            MSG_DISCO('S3:',status)
            WRITE ('Connecting..',CR)
             wait_4_Conn::
            MSG_CONNECT('S3:',status)
            WRITE ('Connect Status = ',status,CR)
        ENDIF
    ENDIF
    -- If connected to client open file and
    -- start sending data
    IF status =  SUCCESS THEN
        -- OPEN S3:
        WRITE ('Opening',CR)
        OPEN FILE file_var ('RW','S3:')
        fileIO = IO_STATUS(file_var)
	  WRITE('File_IO_status=',fileIO,CR)
    ENDIF

    -- if file operation not a success close file and Disconnect server
    IF fileIO <>  SUCCESS THEN
        FORCE_SPMENU(TP_PANEL , SPI_TPUSER , 1)
        WRITE ('File operation is not a success...', CR)
        WRITE ('Disconnecting Server.', CR)
        WRITE ('Closing Dismounting File...', CR)
        Not_Success::
        DISMOUNT_DEV('S3:',status)
        CLOSE FILE file_var
        WRITE('Closed file.', fileIO,CR) --IO_STATUS(dataFile)
        MSG_DISCO('S3:',status)
        GOTO wait_4_Conn

    ELSE
        -- PR id
        --Get the first argument passed,Should be an int.
        GET_TPE_PRM(1, dataType, prmPosregId, realVal, strVal, status)
        	IF status<>SUCCESS THEN
                WRITE TPERROR('[logpr] could not get tpe prm', CR)
                GOTO Not_Success
                --ABORT
            ENDIF

    ENDIF

END TCPserver3